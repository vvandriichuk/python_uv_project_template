[loggers]
keys=root,amd_service

[handlers]
# Single handler for JSON output to stdout, adapted for Cloud Watch
keys=cloudwatchJsonHandler

[formatters]
# Formatter for creating JSON
keys=jsonFormatter

# --- Root logger ---
[logger_root]
# INFO level for root logger in production
level=INFO
handlers=cloudwatchJsonHandler
qualname=root

# --- Logger for all code in 'amd_service' ---
[logger_amd_service]
level=INFO
# Inherits handler from root
handlers=
qualname=amd_service
# Pass messages to root
propagate=1

# --- Handler for outputting JSON to stdout ---
[handler_cloudwatchJsonHandler]
class=StreamHandler
level=INFO
formatter=jsonFormatter
# !!! Important: Direct the output to sys.stdout !!!
args=(sys.stdout,)

# --- Formatter for output to JSON ---
[formatter_jsonFormatter]
class=logging.JSONFormatter
# Use standard LogRecord attributes. You can add custom ones via Filter or LogRecord factory.
# This format will create a JSON string for each log entry.
format={"timestamp": "%(asctime)s", "log_level": "%(levelname)s", "logger_name": "%(name)s", "message": "%(message)s", "module": "%(module)s", "pathname": "%(pathname)s", "lineno": %(lineno)d, "funcName": "%(funcName)s"}
datefmt=%Y-%m-%dT%H:%M:%S%z  ; ISO 8601 time format, convenient for CloudWatch
validate=True ; Basic JSON validation at logging level
